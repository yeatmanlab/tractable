[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement richiehalford@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 tractr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adam Richie-Halford. Author, maintainer. Kelly Chang. Author. Teresa Gomez. Author. McKenzie Hagen. Author. Ariel Rokem. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Richie-Halford , Chang K, Gomez T, Hagen M, Rokem (2023). tractr: Analyzing diffusion MRI tract profiles. R package version 0.0.0.9000, https://github.com/yeatmanlab/tractr.","code":"@Manual{,   title = {tractr: Analyzing diffusion MRI tract profiles},   author = {Adam Richie-Halford and Kelly Chang and Teresa Gomez and McKenzie Hagen and Ariel Rokem},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://github.com/yeatmanlab/tractr}, }"},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Analyzing diffusion MRI tract profiles","text":"tractr contains functions analyze diffusion MRI (dMRI) tract profiles using generalized additive models. operates outputs AFQ software ecosystem tests differences two phenotypic groups along length specified white matter tract.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyzing diffusion MRI tract profiles","text":"can install development version tractr GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"yeatmanlab/tractr\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Analyzing diffusion MRI tract profiles","text":"basic example shows solve common problem:","code":"library(tractr) ## basic example code"},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Analyzing diffusion MRI tract profiles","text":"Please note tractr project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/reference/bootstrap_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap an AFQ dataframe — bootstrap_df","title":"Bootstrap an AFQ dataframe — bootstrap_df","text":"function bootstrap samples AFQ dataframe participant. , first pivots wide format one row per participant, bootstrap samples, finally pivots back long format.","code":""},{"path":"/reference/bootstrap_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap an AFQ dataframe — bootstrap_df","text":"","code":"bootstrap_df(   input_df,   dwi_metric,   group_by = \"group\",   participant_id = \"subjectID\" )"},{"path":"/reference/bootstrap_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap an AFQ dataframe — bootstrap_df","text":"input_df input AFQ dataframe dwi_metric diffusion MRI metric (e.g. \"FA\", \"MD\") group_by grouping variable used group nodeID smoothing terms participant_id name column encodes participant ID","code":""},{"path":"/reference/bootstrap_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap an AFQ dataframe — bootstrap_df","text":"shuffled AFQ dataframe","code":""},{"path":"/reference/bootstrap_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap an AFQ dataframe — bootstrap_df","text":"","code":"if (FALSE) { df_afq <- read.csv(\"/path/to/afq/output.csv\") df_boot <- bootstrap_df(df_afq, \"dti_fa\") }"},{"path":"/reference/build_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a GAM formula dynamically — build_formula","title":"Build a GAM formula dynamically — build_formula","text":"Build GAM formula dynamically","code":""},{"path":"/reference/build_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a GAM formula dynamically — build_formula","text":"","code":"build_formula(   target,   covariates,   smooth_terms = NULL,   group_by = \"group\",   participant_id = \"subjectID\",   k )"},{"path":"/reference/build_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a GAM formula dynamically — build_formula","text":"target Diffusion metric model covariates List strings GAM covariates, including smoothing terms nodes random effect due subjectID. list can also include smoothing terms. smooth_terms Smoothing terms, including smoothing terms nodes random effect due subjectID. group_by grouping variable used group nodeID smoothing terms participant_id name column encodes participant ID k Dimension basis used represent node smoothing term","code":""},{"path":"/reference/build_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a GAM formula dynamically — build_formula","text":"GAM formula","code":""},{"path":"/reference/build_formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a GAM formula dynamically — build_formula","text":"","code":"formula <- build_formula(target = \"dti_fa\",                          covariates = c(\"group\", \"sex\"),                          k = 40) formula <- build_formula(target = \"dki_md\",                          covariates = c(\"group\", \"sex\", \"s(age, by=sex)\"),                          k = 32)"},{"path":"/reference/fit_gam.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a GAM for tract node metrics (e.g. FA, MD) — fit_gam","title":"Fit a GAM for tract node metrics (e.g. FA, MD) — fit_gam","text":"function series steps: family == \"auto\", choose distribution (either beta gamma) lowest AIC fitting dMRI metric data k == \"auto\", build initial GAM model k = 16 continue double k value gam.check shows k large enough Fit GAM model :  target ~ covariates + s(nodeID, =group, k = k_value) + s(subjectID, bs = \"re\") Optionally save output gam.check summary files.","code":""},{"path":"/reference/fit_gam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a GAM for tract node metrics (e.g. FA, MD) — fit_gam","text":"","code":"fit_gam(   df_tract,   target = NULL,   covariates = NULL,   smooth_terms = NULL,   group_by = NULL,   participant_id = NULL,   formula = NULL,   k = NULL,   family = \"auto\",   method = \"fREML\",   ... )"},{"path":"/reference/fit_gam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a GAM for tract node metrics (e.g. FA, MD) — fit_gam","text":"df_tract AFQ Dataframe node metric values single tract target diffusion metric model (e.g. \"FA\", \"MD\"). set, formula must set. covariates List strings GAM covariates, including smoothing terms nodes random effect due subjectID. set, formula must set. smooth_terms Smoothing terms, including smoothing terms nodes random effect due subjectID. set, formula must set. group_by grouping variable used group nodeID smoothing terms set, formula must set. participant_id name column encodes participant ID set, formula must set. formula Optional explicit formula use GAM. provided, override dynamically generated formula build target covariate inputs. Default = NULL. set, inputs determine formula must set NULL. k Dimension basis used represent node smoothing term, k = 'auto' (default), function attempt find best value. family Distribution use gam. Must either 'gamma', 'beta', 'auto'. 'auto', function select best fit beta gamma distributions. method String, fitting method passed mgcv::bam ... keyword arguments passed mgcv::bam","code":""},{"path":"/reference/fit_gam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a GAM for tract node metrics (e.g. FA, MD) — fit_gam","text":"Fitted GAM model","code":""},{"path":"/reference/fit_gam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a GAM for tract node metrics (e.g. FA, MD) — fit_gam","text":"","code":"if (FALSE) { df_afq <- read.csv(\"/path/to/afq/output.csv\") tract <- \"CST_L\" df_tract <- df_afq[which(df_afq$tractID == tract), ] gam_fit <- fit_gam(df_tract,                    target = \"dti_fa\",                    covariates = list(\"group\", \"sex\"),                    family = \"gamma\",                    k = \"auto\") }"},{"path":"/reference/parse.s3.uri.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse an S3 URI — parse.s3.uri","title":"Parse an S3 URI — parse.s3.uri","text":"Parse S3 URI","code":""},{"path":"/reference/parse.s3.uri.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse an S3 URI — parse.s3.uri","text":"","code":"parse.s3.uri(uri)"},{"path":"/reference/parse.s3.uri.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse an S3 URI — parse.s3.uri","text":"uri AWS S3 URI","code":""},{"path":"/reference/parse.s3.uri.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse an S3 URI — parse.s3.uri","text":"named list bucket object elements","code":""},{"path":"/reference/parse.s3.uri.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse an S3 URI — parse.s3.uri","text":"","code":"parse.s3.uri(\"s3://bucket-name/a/path/to/an/object.txt\") #>                    bucket                    object  #>             \"bucket-name\" \"a/path/to/an/object.txt\""},{"path":"/reference/plot_gam_splines.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot GAM splines for each group — plot_gam_splines","title":"Plot GAM splines for each group — plot_gam_splines","text":"Plot GAM splines group","code":""},{"path":"/reference/plot_gam_splines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot GAM splines for each group — plot_gam_splines","text":"","code":"plot_gam_splines(   gam_model,   tract,   df_tract,   dwi_metric,   covariates,   group_by = \"group\",   participant_id = \"subjectID\",   out_dir )"},{"path":"/reference/plot_gam_splines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot GAM splines for each group — plot_gam_splines","text":"gam_model GAM object, produced gam/bam tract AFQ tract name df_tract dataframe AFQ nodes certain tract dwi_metric Diffusion MRI metric (e.g. FA, MD) covariates List strings GAM covariates, including smoothing terms nodes random effect due subjectID. group_by grouping variable used group nodeID smoothing terms participant_id name column encodes participant ID out_dir directory save plots","code":""},{"path":"/reference/plot_gam_splines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot GAM splines for each group — plot_gam_splines","text":"","code":"if (FALSE) { df_afq <- read.csv(\"/path/to/afq/output.csv\") gam_fit <- fit_gam(df_afq,                    target = \"dti_fa\",                    covariates = list(\"group\", \"sex\"),                    family = \"gamma\",                    k = 40) plot_gam_splines(gam_model = gam_fit,                  tract = \"OR\",                  df_tract = df_afq,                  dwi_metric = \"dti_fa\",                  covariates = c(\"group\", \"sex\"),                  out_dir = \".\") }"},{"path":"/reference/plot_tract_profiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot tract profiles for each bundle as a facet and each metric as a figure. — plot_tract_profiles","title":"Plot tract profiles for each bundle as a facet and each metric as a figure. — plot_tract_profiles","text":"Plot tract profiles bundle facet metric figure.","code":""},{"path":"/reference/plot_tract_profiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot tract profiles for each bundle as a facet and each metric as a figure. — plot_tract_profiles","text":"","code":"plot_tract_profiles(   df,   metrics = NULL,   bundles = NULL,   bundles_col = \"tractID\",   group_col = NULL,   line_func = \"mean\",   linewidth = 1,   ribbon_func = \"mean_cl_boot\",   ribbon_alpha = 0.25,   n_groups = 3,   pal_name = \"colorblind\",   out_dir = getwd(),   figsize = c(8, 11.5) )"},{"path":"/reference/plot_tract_profiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot tract profiles for each bundle as a facet and each metric as a figure. — plot_tract_profiles","text":"df Data frame. metrics Name(s) metrics plot per figure, character vector. default, diffusion metrics provided data frame. bundles Name(s) tract bundles plot per facet, character vector. default, tract bundles provided data frame. bundles_col Name column provided data frame tract bundles. group_col Name column data frame group color, character. default, grouping variable provided. line_func Line function provides line positioning. See stat_summary information. linewidth Line thickness tract profile line. ribbon_func Ribbon function provides range ribbon. See stat_summary information. ribbon_alpha Ribbon alpha level. n_groups Number groups split numeric grouping variable. pal_name Grouping color palette name, character. Default colorblind. out_dir Output directory saved plots. figsize Figure size. numeric vector (width, height) inches.","code":""},{"path":"/reference/plot_tract_profiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot tract profiles for each bundle as a facet and each metric as a figure. — plot_tract_profiles","text":"List plot handles corresponding specified metrics.","code":""},{"path":"/reference/plot_tract_profiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot tract profiles for each bundle as a facet and each metric as a figure. — plot_tract_profiles","text":"","code":"if (FALSE) { df <- read.afq.sarica()  plot_tract_profiles(   df,   metrics = c(\"fa\"),   bundles = c(\"Left Corticospinal\", \"Right Corticospinal\"),   group_col = \"class\",   figsize   = c(8, 6) )  plot_tract_profiles(   df,   metrics = c(\"fa\"),   bundles = c(\"Left Corticospinal\", \"Right Corticospinal\"),   group_col = \"age\",   n_groups  = 3,   pal_name  = \"Spectral\",   figsize   = c(8, 6) ) }"},{"path":"/reference/read.afq.files.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a merged AFQ/phenotype dataframe — read.afq.files","title":"Create a merged AFQ/phenotype dataframe — read.afq.files","text":"Create merged AFQ/phenotype dataframe","code":""},{"path":"/reference/read.afq.files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a merged AFQ/phenotype dataframe — read.afq.files","text":"","code":"read.afq.files(   nodes_csv,   pheno_csv,   index = \"subjectID\",   index.nodes = index,   index.pheno = index,   dwi_metrics = NULL,   factor_cols = NULL,   pheno_cols = NULL,   ... )"},{"path":"/reference/read.afq.files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a merged AFQ/phenotype dataframe — read.afq.files","text":"nodes_csv path nodes file pheno_csv path phenotypic file index specification column used merging index.nodes specification column used merging index.pheno specification column used merging dwi_metrics diffusion metrics retained factor_cols columns treated factors pheno_cols columns include pheno file ... arguments passed read.csv","code":""},{"path":"/reference/read.afq.files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a merged AFQ/phenotype dataframe — read.afq.files","text":"","code":"if (FALSE) {   df_afq <- read.afq.files(nodes_csv = \"a/path/to/nodes.csv\",                            pheno_csv = \"a/path/to/pheno.csv\") }"},{"path":"/reference/read.afq.hbn.html","id":null,"dir":"Reference","previous_headings":"","what":"Load tract profiles from the Healthy Brain Network dataset — read.afq.hbn","title":"Load tract profiles from the Healthy Brain Network dataset — read.afq.hbn","text":"Load tract profiles Healthy Brain Network dataset","code":""},{"path":"/reference/read.afq.hbn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load tract profiles from the Healthy Brain Network dataset — read.afq.hbn","text":"","code":"read.afq.hbn(truncate = FALSE, ...)"},{"path":"/reference/read.afq.hbn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load tract profiles from the Healthy Brain Network dataset — read.afq.hbn","text":"truncate TRUE, truncate data 49 rows. default = FALSE ... arguments passed read.csv","code":""},{"path":"/reference/read.afq.hbn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load tract profiles from the Healthy Brain Network dataset — read.afq.hbn","text":"merged dataframe data HBN","code":""},{"path":"/reference/read.afq.hbn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load tract profiles from the Healthy Brain Network dataset — read.afq.hbn","text":"","code":"if (FALSE) {   df_hbn <- read.afq.hbn() }"},{"path":"/reference/read.afq.sarica.html","id":null,"dir":"Reference","previous_headings":"","what":"Load tract profiles from Sarica et al. — read.afq.sarica","title":"Load tract profiles from Sarica et al. — read.afq.sarica","text":"Load tract profiles Sarica et al.","code":""},{"path":"/reference/read.afq.sarica.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load tract profiles from Sarica et al. — read.afq.sarica","text":"","code":"read.afq.sarica(...)"},{"path":"/reference/read.afq.sarica.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load tract profiles from Sarica et al. — read.afq.sarica","text":"... arguments passed read.csv","code":""},{"path":"/reference/read.afq.sarica.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load tract profiles from Sarica et al. — read.afq.sarica","text":"merged dataframe data Sarica et al.","code":""},{"path":"/reference/read.afq.sarica.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load tract profiles from Sarica et al. — read.afq.sarica","text":"","code":"df_sarica <- read.afq.sarica()"},{"path":"/reference/read.afq.weston.havens.html","id":null,"dir":"Reference","previous_headings":"","what":"Load tract profiles from Yeatman et al. — read.afq.weston.havens","title":"Load tract profiles from Yeatman et al. — read.afq.weston.havens","text":"Load tract profiles Yeatman et al.","code":""},{"path":"/reference/read.afq.weston.havens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load tract profiles from Yeatman et al. — read.afq.weston.havens","text":"","code":"read.afq.weston.havens(...)"},{"path":"/reference/read.afq.weston.havens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load tract profiles from Yeatman et al. — read.afq.weston.havens","text":"... arguments passed read.csv","code":""},{"path":"/reference/read.afq.weston.havens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load tract profiles from Yeatman et al. — read.afq.weston.havens","text":"merged dataframe data Yeatman et al.","code":""},{"path":"/reference/read.afq.weston.havens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load tract profiles from Yeatman et al. — read.afq.weston.havens","text":"","code":"df_weston_havens <- read.afq.weston.havens()"},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. magrittr %>%","code":""},{"path":"/reference/sampling_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform repeated sampling tests on an AFQ dataframe. — sampling_test","title":"Perform repeated sampling tests on an AFQ dataframe. — sampling_test","text":"permutation_test == FALSE (default), function bootstrap samples AFQ dataframe returns pairwise differences node bootstrap sample. results can used construct bootstrap confidence intervals node-wise differences.","code":""},{"path":"/reference/sampling_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform repeated sampling tests on an AFQ dataframe. — sampling_test","text":"","code":"sampling_test(   df_tract,   n_samples,   dwi_metric,   tract,   group_by = \"group\",   participant_id = \"subjectID\",   sample_uniform = FALSE,   covariates = NULL,   smooth_terms = NULL,   k = NULL,   family = NULL,   formula = NULL,   factor_a = NULL,   factor_b = NULL,   permute = FALSE )"},{"path":"/reference/sampling_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform repeated sampling tests on an AFQ dataframe. — sampling_test","text":"df_tract AFQ Dataframe node metric values single tract n_samples Number sample tests perform dwi_metric diffusion metric model (e.g. \"FA\", \"MD\") tract AFQ tract name group_by grouping variable used group nodeID smoothing terms participant_id name column encodes participant ID sample_uniform Boolean flag. TRUE, shuffling sample uniformly unique values columns. FALSE, shuffling shuffle without replacement. covariates List strings GAM covariates, including smoothing terms nodes random effect due subjectID. smooth_terms Smoothing terms, including smoothing terms nodes random effect due subjectID. k Dimension basis used represent node smoothing term family Distribution use gam. Must 'gamma' 'beta' formula Optional explicit formula use GAM. provided, override dynamically generated formula build target, covariate, k inputs. Default = NULL. factor_a First group factor, string factor_b Second group factor, string permute Boolean flag. TRUE, perform permutation test. Otherwise, bootstrap simulation.","code":""},{"path":"/reference/sampling_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform repeated sampling tests on an AFQ dataframe. — sampling_test","text":"Dataframe bootstrap permutation test coefficients","code":""},{"path":"/reference/sampling_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform repeated sampling tests on an AFQ dataframe. — sampling_test","text":"permutation_test == TRUE, function simulates null distribution using permutation testing. , shuffles destroy relationships covariates dwi_metrics. computes node-wise differences shuffled sample.","code":""},{"path":"/reference/sampling_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform repeated sampling tests on an AFQ dataframe. — sampling_test","text":"","code":"if (FALSE) { df_afq <- read.csv(\"/path/to/afq/output.csv\") df_tract <- df_afq[which(df_afq$tractID == tract), ] bootstrap_coefs <- sampling_test(df_afq,                                  dwi_metric = \"dti_fa\",                                  covariates = list(\"group\", \"sex\"),                                  family = \"gamma\",                                  k = 40,                                  n_samples = 1000) }"},{"path":"/reference/select_bundle.html","id":null,"dir":"Reference","previous_headings":"","what":"Select a single bundle from an AFQ dataframe — select_bundle","title":"Select a single bundle from an AFQ dataframe — select_bundle","text":"Select single bundle AFQ dataframe","code":""},{"path":"/reference/select_bundle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select a single bundle from an AFQ dataframe — select_bundle","text":"","code":"select_bundle(   df_afq,   tract,   dwi_metric,   covariates,   participant_id = \"subjectID\",   group_by = \"group\" )"},{"path":"/reference/select_bundle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select a single bundle from an AFQ dataframe — select_bundle","text":"df_afq input AFQ dataframe tract Abbreviated tract name, e.g., \"CST_L\" \"\" dwi_metric diffusion MRI metric (e.g. \"FA\", \"MD\") covariates List strings GAM covariates, including smoothing terms nodes random effect due subjectID. list can also include smoothing terms. participant_id name column encodes participant ID group_by grouping variable used group nodeID smoothing terms","code":""},{"path":"/reference/select_bundle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select a single bundle from an AFQ dataframe — select_bundle","text":"AFQ dataframe containing selected bundle","code":""},{"path":"/reference/shuffle_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Shuffle an AFQ dataframe — shuffle_df","title":"Shuffle an AFQ dataframe — shuffle_df","text":"function shuffles participants' age, group, sex, thereby destroying correlations participants' tract profiles phenotypic data.","code":""},{"path":"/reference/shuffle_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shuffle an AFQ dataframe — shuffle_df","text":"","code":"shuffle_df(   input_df,   dwi_metric,   group_by = \"group\",   participant_id = \"subjectID\",   shuffle_vars = NULL,   sample_uniform = FALSE )"},{"path":"/reference/shuffle_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shuffle an AFQ dataframe — shuffle_df","text":"input_df input AFQ dataframe dwi_metric diffusion MRI metric (e.g. \"FA\", \"MD\") group_by grouping variable used group nodeID smoothing terms participant_id name column encodes participant ID shuffle_vars List strings column names shuffled sample_uniform Boolean flag. TRUE, shuffling sample uniformly unique values columns. FALSE, shuffling shuffle without replacement.","code":""},{"path":"/reference/shuffle_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shuffle an AFQ dataframe — shuffle_df","text":"shuffled AFQ dataframe","code":""},{"path":"/reference/shuffle_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shuffle an AFQ dataframe — shuffle_df","text":"","code":"if (FALSE) { df_afq <- read.csv(\"/path/to/afq/output.csv\") df_shuffle <- shuffle_df(df_afq, \"dti_fa\") }"},{"path":"/reference/spline_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and plot difference between two splines — spline_diff","title":"Calculate and plot difference between two splines — spline_diff","text":"function draws spline-difference plot 2 splines, returns dataframe differences node","code":""},{"path":"/reference/spline_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and plot difference between two splines — spline_diff","text":"","code":"spline_diff(   gam_model,   tract,   group_by = \"group\",   factor_a,   factor_b,   save_output = TRUE,   sim.ci = FALSE,   out_dir )"},{"path":"/reference/spline_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and plot difference between two splines — spline_diff","text":"gam_model GAM object, produced gam/bam tract AFQ tract name group_by grouping variable used group nodeID smoothing terms factor_a First group factor, string factor_b Second group factor, string save_output Boolean. TRUE, save plot output sim.ci Logical: Using simultaneous confidence intervals (default set FALSE). implementation simultaneous CIs follows Gavin Simpson's blog December 15, 2016: http://www.fromthebottomoftheheap.net/2016/12/15/simultaneous-interval-revisited/. interval calculated simulations based. Please specify seed (e.g., set.seed(123)) reproducable results. Note: contrast Gavin Simpson's code, Bayesian posterior covariance matrix parameters uncertainty corrected (unconditional=TRUE) reflect uncertainty estimation smoothness parameters. out_dir Directory save plots","code":""},{"path":"/reference/spline_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and plot difference between two splines — spline_diff","text":"dataframe spline differences node","code":""},{"path":"/reference/spline_diff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate and plot difference between two splines — spline_diff","text":"","code":"if (FALSE) { df_afq <- read.csv(\"/path/to/afq/output.csv\") gam_fit <- fit_gam(df_afq,                    target = \"dti_fa\",                    covariates = list(\"group\", \"sex\"),                    family = \"gamma\",                    k = 40) df_diff = spline_diff(gam_model = gam_fit,                       tract = \"OR\",                       factor_a = \"0\",                       factor_b = \"1\",                       out_dir = \".\") }"},{"path":"/reference/tract_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve tract name from abbreviation — tract_name","title":"Retrieve tract name from abbreviation — tract_name","text":"Retrieve tract name abbreviation","code":""},{"path":"/reference/tract_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve tract name from abbreviation — tract_name","text":"","code":"tract_name(tract)"},{"path":"/reference/tract_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve tract name from abbreviation — tract_name","text":"tract AFQ tract abbreviation","code":""},{"path":"/reference/tract_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve tract name from abbreviation — tract_name","text":"Formatted tract name","code":""},{"path":"/reference/tract_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve tract name from abbreviation — tract_name","text":"","code":"name <- tract_name(\"OR\") name <- tract_name(\"CST_L\")"},{"path":"/reference/tractr_single_bundle.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze group differences in a single dMRI tract profile using GAMs — tractr_single_bundle","title":"Analyze group differences in a single dMRI tract profile using GAMs — tractr_single_bundle","text":"Analyze group differences single dMRI tract profile using GAMs","code":""},{"path":"/reference/tractr_single_bundle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze group differences in a single dMRI tract profile using GAMs — tractr_single_bundle","text":"","code":"tractr_single_bundle(   df_afq,   tract,   dwi_metric,   participant_id = \"subjectID\",   group_by = \"group\",   covariates = c(group_by),   smooth_terms = NULL,   k = \"auto\",   family = \"auto\",   ... )"},{"path":"/reference/tractr_single_bundle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze group differences in a single dMRI tract profile using GAMs — tractr_single_bundle","text":"df_afq Input AFQ dataframe. NULL, function load data using read.afq.data additional arguments ... tract Abbreviated tract name, e.g., \"CST_L\" \"\" dwi_metric diffusion metric model (e.g. \"FA\", \"MD\") participant_id name column encodes participant ID group_by grouping variable used group nodeID smoothing terms covariates List strings GAM covariates, including smoothing terms nodes random effect due subjectID. smooth_terms Smoothing terms, including smoothing terms nodes random effect due subjectID. k Dimension basis used represent node smoothing term, k = 'auto', function attempt find best value family Distribution use gam. Must either 'gamma', 'beta', 'auto'. 'auto', function select best fit beta gamma distributions. ... Arguments pass fit_gam","code":""},{"path":"/reference/tractr_single_bundle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze group differences in a single dMRI tract profile using GAMs — tractr_single_bundle","text":"","code":"sarica <- read.afq.sarica() sarica$group <- factor(sarica$class) sarica$subjectID <- unclass(factor(sarica$subjectID)) tractr_single_bundle(df_afq = sarica,                      tract = \"Right Corticospinal\",                      participant_id = \"subjectID\",                      group_by = \"group\",                      covariates = c(\"age\",\"group\"),                      dwi_metric = \"fa\") #>  #> Family: Beta regression(113.72)  #> Link function: logit  #>  #> Formula: #> fa ~ age + group + s(nodeID, by = group, k = 16) + s(subjectID,  #>     bs = \"re\") #>  #> Estimated degrees of freedom: #> 14.6 14.6 42.2  total = 74.47  #>  #> fREML score: 6902.864"}]
